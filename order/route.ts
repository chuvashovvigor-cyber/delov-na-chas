// app/api/order/route.ts
export const dynamic = "force-dynamic";

const TOKEN = process.env.TELEGRAM_BOT_TOKEN!;
const CHAT  = process.env.TELEGRAM_ADMIN_CHAT_ID!; // -1003112208284
const API   = `https://api.telegram.org/bot${TOKEN}`;

export async function POST(req: Request) {
  try {
    const form = await req.formData();
    const name    = String(form.get("name") || "").trim();
    const phone   = String(form.get("phone") || "").trim();
    const address = String(form.get("address") || "").trim();
    const details = String(form.get("details") || "").trim();

    if (!name || !phone || !details) {
      return new Response("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∑–∞–¥–∞—á—É", { status: 400 });
    }

    const text =
      `üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ¬´–î–µ–ª–æ–≤-–Ω–∞-—á–∞—Å¬ª\n` +
      `üë§ –ò–º—è: ${name}\n` +
      `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n` +
      (address ? `üìç –ê–¥—Ä–µ—Å: ${address}\n` : "") +
      `üìù –ó–∞–¥–∞—á–∞: ${details}`;

    const r = await fetch(`${API}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: CHAT, text }),
    });

    const data = await r.json();
    if (!data.ok) {
      return new Response(`Telegram error: ${JSON.stringify(data)}`, { status: 502 });
    }

    return new Response(
      `<meta charset="utf-8"><div style="font:16px/1.5 system-ui;padding:24px">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.</div>`,
      { status: 200, headers: { "Content-Type": "text/html; charset=utf-8" } }
    );
  } catch (e: any) {
    return new Response(`Server error: ${e?.message || e}`, { status: 500 });
  }
}

// –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∏–Ω–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞ (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞)
export async function GET() {
  return new Response("order alive", { status: 200 });
}
